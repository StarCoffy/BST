#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
typedef struct celula{
  int info;
  struct celula *dir;
  struct celula *esq;
}celula;

typedef struct arvoreBST{
 struct celula * cabeca;
}arvoreBST;

void inserirDir(celula* atual,int num){
    celula* nova = (celula*)malloc(sizeof(celula));
    nova->info = num;
    nova->dir = NULL;
    nova->esq = NULL;
    atual->dir = nova;
}

void inserirEsq(celula* atual,int num){
    celula* nova = (celula*)malloc(sizeof(celula));
    nova->info = num;
    nova->dir = NULL;
    nova->esq = NULL;
    atual->esq = nova;
}

void inserir(celula* atual,int num){
  if(atual == NULL){
    celula* nova = (celula*)malloc(sizeof(celula));
    nova->info = num;
    nova->dir = NULL;
    nova->esq = NULL;
  }
  else if(atual->info > num){
    if(atual->esq != NULL)
      inserir(atual->esq,num);
    else inserirEsq(atual,num);
  }
  else if(atual->info < num){
    if(atual->dir != NULL)
      inserir(atual->dir,num);
    else inserirDir(atual,num);
  }
}

void inserir_noh(arvoreBST* arvore, int num)
{
  if(arvore->cabeca == NULL){
    celula* nova = (celula*)malloc(sizeof(celula));
    nova->info = num;
    nova->dir = NULL;
    nova->esq = NULL;
    arvore->cabeca = nova;
  }
  else inserir(arvore->cabeca,num);
}



void imprimir_arvore(celula* a){
    printf("%d",a->info);
  if(a->dir != NULL){
    imprimir_arvore(a->dir);
  }
  else{
    imprimir_arvore(a->esq);
  }
}
int main(void) {
  arvoreBST* arvore= (arvoreBST*)malloc(sizeof(arvoreBST));
  arvore->cabeca = NULL;
  inserir_noh(arvore,2);
   inserir_noh(arvore,5);
    inserir_noh(arvore,6);
  imprimir_arvore(arvore->cabeca);
  return 0;
}
